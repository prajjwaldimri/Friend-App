<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutPageAppTitle.Text" xml:space="preserve">
    <value>BeFriend</value>
    <comment>AboutPage.xaml</comment>
  </data>
  <data name="AboutPageDeveloperName.Text" xml:space="preserve">
    <value>Created by - Prajjwal Dimri</value>
    <comment>AboutPage.xaml</comment>
  </data>
  <data name="AboutPageHeader.Text" xml:space="preserve">
    <value>Open-Source, Non-Profit, and Made for the community!</value>
    <comment>AboutPage.xaml</comment>
  </data>
  <data name="AboutPageLibraries.Text" xml:space="preserve">
    <value>3rd Party Libraries:</value>
    <comment>AboutPage.xaml</comment>
  </data>
  <data name="AboutPageLicenses.Text" xml:space="preserve">
    <value>Licenses:</value>
    <comment>AboutPage.xaml</comment>
  </data>
  <data name="AboutPageOthers.Text" xml:space="preserve">
    <value>Other Resources:</value>
    <comment>AboutPage.xaml</comment>
  </data>
  <data name="AboutPageTranslators.Text" xml:space="preserve">
    <value>Translators:</value>
    <comment>AboutPage.xaml</comment>
  </data>
  <data name="AboutPivotItem.Header" xml:space="preserve">
    <value>ABOUT</value>
    <comment>MainPage.xaml</comment>
  </data>
  <data name="AcknowledgmentHeader.Text" xml:space="preserve">
    <value>Acknowledgments:</value>
    <comment>AboutPage.xaml</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>BeFriend is an open-source distress signal sending application which notifies your contacts of your location whenever you're in danger. 

It uses GPS and cellular together to get the most accurate location of the user possible. The app can text(SMS), tweet(Twitter) or post(Facebook) your location.

The app is open-sourced, so you can actively contribute to the development of the app. 
The app is being developed at: http://www.github.com/prajjwaldimri/Friend-App 

Note: The app uses phoneCall capability to place phone calls without showing dialer. The app also uses cellularMessaging capability(provided by Microsoft) which can silently send SMS from your device. Both capabilities are used according to the guidelines provide by Microsoft and can be inspected anytime at the Github repository.</value>
    <comment>AppxPackageManifest</comment>
  </data>
  <data name="FacebookMessage" xml:space="preserve">
    <value>By logging in here you are giving BeFriend permission to post to your feed without your consent. You can customize the message that the app posts in the settings page. 

Note that you can customize the scope of the posted feed (private, friends or public) during login.</value>
  </data>
  <data name="FirstTimeTutorialBack.Content" xml:space="preserve">
    <value>&lt; Back</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialContactChooserOne.Text" xml:space="preserve">
    <value>Click here to set contact 1...</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialContactChooserThree.Text" xml:space="preserve">
    <value>Click here to set contact 3...</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialContactChooserTwo.Text" xml:space="preserve">
    <value>Click here to set contact 2...</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialContactTutorial.Text" xml:space="preserve">
    <value>Choose 3 people whom you would like to inform if you're in danger!</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialFacebook.Text" xml:space="preserve">
    <value>Add Facebook</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialFinish.Content" xml:space="preserve">
    <value>Finish</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialMemory.Text" xml:space="preserve">
    <value>Dedicated to all crime victims</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialName.Text" xml:space="preserve">
    <value>Enter your name and choose a profile pic</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialNext.Content" xml:space="preserve">
    <value>Next &gt;</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialNoPicture.Text" xml:space="preserve">
    <value>No Picture Selected</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialOne.Text" xml:space="preserve">
    <value>Tutorial 1</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialOneDescription.Text" xml:space="preserve">
    <value>Whenever you are suspicious of someone following you or you suspect you're in danger go to this page and hold the button. If your finger lifts from the button it triggers a countdown which will open SOS page if it reaches 00:00:00</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialOneHeader.Text" xml:space="preserve">
    <value>Timer Page</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialPictureButton.Content" xml:space="preserve">
    <value>Click to choose a picture</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialSkip.Content" xml:space="preserve">
    <value>Skip</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialStart.Text" xml:space="preserve">
    <value>Let's Get Started</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialThree.Text" xml:space="preserve">
    <value>Tutorial 3</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialThreeDescription.Text" xml:space="preserve">
    <value>The most important page in the App. Navigating to this page will trigger all emergency options built-in the application.</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialThreeDescription1.Text" xml:space="preserve">
    <value>Enable this option in SETTINGS page. This will place a silent notification in action center periodically till it is disabled. Clicking on the notification will immediately launch the SOS Page</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialThreeHeader.Text" xml:space="preserve">
    <value>SOS Page</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialThreeHeader1.Text" xml:space="preserve">
    <value>Permanent Toast Notifications</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialTwitter.Text" xml:space="preserve">
    <value>Add Twitter</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialTwo.Text" xml:space="preserve">
    <value>Tutorial 2</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialTwoDescription.Text" xml:space="preserve">
    <value>You can set a time at which the app will ask you your status. If you don't respond within 30 minutes it will notify your friends about your location.</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialTwoHeader.Text" xml:space="preserve">
    <value>Reminder Page</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="FirstTimeTutorialUserName.PlaceholderText" xml:space="preserve">
    <value>Name...</value>
    <comment>FirstTimeTutorial.xaml</comment>
  </data>
  <data name="HomePageEmergency.Text" xml:space="preserve">
    <value>Emergency</value>
    <comment>HomePage.xaml</comment>
  </data>
  <data name="HomePageSupport.Text" xml:space="preserve">
    <value>Support</value>
    <comment>HomePage.xaml</comment>
  </data>
  <data name="HomePivotItem.Header" xml:space="preserve">
    <value>HOME</value>
    <comment>MainPage.xaml</comment>
  </data>
  <data name="InAppMessage/AppUpdation" xml:space="preserve">
    <value>-Fixed Twitter Integration
- Updated to support Windows Anniversary update
- Added medikit</value>
    <comment>BaseViewModel.cs</comment>
  </data>
  <data name="InAppMessage/BugSuggestionsContent" xml:space="preserve">
    <value>Currently, I am the only developer for the app, so there could be a few bugs in the app that I missed. Please use Gitter chat or Github issues or Email to report any bugs or new feature suggestions before giving the app a bad review on the store. Enjoy!</value>
    <comment>BaseViewModel.cs</comment>
  </data>
  <data name="InAppMessage/BugSuggestionsTitle" xml:space="preserve">
    <value>Any Bugs or Suggestions?</value>
    <comment>BaseViewModel.cs</comment>
  </data>
  <data name="InAppMessage/DevelopContent" xml:space="preserve">
    <value>Did you know that BeFriend is completely Open-Sourced, which means you can actively contribute to the development of the app. 

Whether it is coding, designing, documenting, testing or translating, all contributions are very welcome.</value>
    <comment>BaseViewModel.cs</comment>
  </data>
  <data name="InAppMessage/DevelopTitle" xml:space="preserve">
    <value>Let's Develop Together!</value>
    <comment>BaseViewModel.cs</comment>
  </data>
  <data name="InAppMessage/PrivacyContent" xml:space="preserve">
    <value>Your personal information is and never will be shared with any 3rd party.

The only information collected from the device is the bug report which is sent by the app whenever it crashes (using HockeyAppSdk) and the bug report only contains the technical details of bug and name of the device.</value>
    <comment>BaseViewModel.cs</comment>
  </data>
  <data name="InAppMessage/PrivacyTitle" xml:space="preserve">
    <value>Privacy Policy</value>
    <comment>BaseViewModel.cs</comment>
  </data>
  <data name="InAppMessage/TranslateContent" xml:space="preserve">
    <value>Translate the app to your native language in easy to use web interface using Crowdin.</value>
    <comment>BaseViewModel.cs</comment>
  </data>
  <data name="InAppMessage/TranslateTitle" xml:space="preserve">
    <value>Not a native English speaker?</value>
    <comment>BaseViewModel.cs</comment>
  </data>
  <data name="MainPagePivot.Title" xml:space="preserve">
    <value>BeFriend</value>
    <comment>MainPage.xaml</comment>
  </data>
  <data name="MediKitAppBarButton.Label" xml:space="preserve">
    <value>Medi-Kit</value>
    <comment>MainPage.xaml</comment>
  </data>
  <data name="ReminderPageCancel.Text" xml:space="preserve">
    <value>Cancel</value>
    <comment>ReminderPage.xaml</comment>
  </data>
  <data name="ReminderPageRegister.Text" xml:space="preserve">
    <value>Register</value>
    <comment>ReminderPage.xaml</comment>
  </data>
  <data name="ReminderPageTutorialText.Text" xml:space="preserve">
    <value>Set a time at which you think you should be able to respond to the reminder on the phone. If you don't respond to the reminder in 20 minutes, BeFriend will remind all of your friends about your location!</value>
    <comment>ReminderPage.xaml</comment>
  </data>
  <data name="ReminderPivotItem.Header" xml:space="preserve">
    <value>REMINDER</value>
    <comment>MainPage.xaml</comment>
  </data>
  <data name="SettingsContactsHeader.Text" xml:space="preserve">
    <value>Contacts</value>
    <comment>SettingsPage.xaml</comment>
  </data>
  <data name="SettingsDeveloperOptions.Text" xml:space="preserve">
    <value>Developer Options</value>
    <comment>SettingsPage.xaml</comment>
  </data>
  <data name="SettingsFacebook.Text" xml:space="preserve">
    <value>Connect Facebook</value>
    <comment>SettingsPage.xaml</comment>
  </data>
  <data name="SettingsMessageHeader.Text" xml:space="preserve">
    <value>Message</value>
    <comment>SettingsPage.xaml</comment>
  </data>
  <data name="SettingsNotificationHeader.Text" xml:space="preserve">
    <value>Notifications</value>
    <comment>SettingsPage.xaml</comment>
  </data>
  <data name="SettingsOtherHeader.Text" xml:space="preserve">
    <value>Other</value>
    <comment>SettingsPage.xaml</comment>
  </data>
  <data name="SettingsPermanentNotification.Text" xml:space="preserve">
    <value>Permanent Toast Notifications</value>
    <comment>SettingsPage.xaml</comment>
  </data>
  <data name="SettingsPivotItem.Header" xml:space="preserve">
    <value>SETTINGS</value>
    <comment>MainPage.xaml</comment>
  </data>
  <data name="SettingsProfileHeader.Text" xml:space="preserve">
    <value>Profile</value>
    <comment>SettingsPage.xaml</comment>
  </data>
  <data name="SettingsSocialHeader.Text" xml:space="preserve">
    <value>Social Networks</value>
    <comment>SettingsPage.xaml</comment>
  </data>
  <data name="SettingsTheme.Text" xml:space="preserve">
    <value>Theme</value>
    <comment>SettingsPage.xaml</comment>
  </data>
  <data name="SettingsTiming.Text" xml:space="preserve">
    <value>Set Time in Timer</value>
    <comment>SettingsPage.xaml</comment>
  </data>
  <data name="SettingsTwitter.Text" xml:space="preserve">
    <value>Connect Twitter</value>
    <comment>SettingsPage.xaml</comment>
  </data>
  <data name="StoreRateAppBarButton.Label" xml:space="preserve">
    <value>Rate</value>
    <comment>MainPage.xaml</comment>
  </data>
  <data name="TimerPageHold.Text" xml:space="preserve">
    <value>Hold</value>
    <comment>TimerPage.xaml</comment>
  </data>
  <data name="TimerPageStop.Text" xml:space="preserve">
    <value>Stop</value>
    <comment>TimerPage.xaml</comment>
  </data>
  <data name="TimerPivotItem.Header" xml:space="preserve">
    <value>TIMER</value>
    <comment>MainPage.xaml</comment>
  </data>
  <data name="TwitterAuthInstruction.Text" xml:space="preserve">
    <value>Log in and paste the PIN below:</value>
    <comment>TwitterAuthenticator.xaml</comment>
  </data>
  <data name="TwitterAuthTextBox.PlaceholderText" xml:space="preserve">
    <value>Paste PIN here:</value>
    <comment>TwitterAuthenticator.xaml</comment>
  </data>
</root>